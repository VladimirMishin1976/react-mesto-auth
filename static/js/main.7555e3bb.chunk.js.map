{"version":3,"sources":["images/header__logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","utils/api.js","utils/auth.js","images/success.svg","images/unsuccess.svg","components/App.js","reportWebVitals.js","index.js"],"names":["Header","userData","handleLogOut","loggedIn","React","useState","hamburgerOpened","setHamburgerOpened","className","email","to","onClick","href","target","src","logo","alt","path","exact","id","type","htmlFor","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLike","likes","some","item","cardLikeButtonClassName","link","name","aria-label","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","about","map","i","Footer","ImagePopup","onClose","PopupWithForm","title","isOpen","buttonText","children","onSubmit","EditProfilePopup","onUpdateUser","setName","description","setDescripton","useEffect","_","e","preventDefault","placeholder","minLength","maxLength","onChange","value","EditAvatarPopup","onUpdateAvatar","linkAvatar","useRef","current","ref","AddPlacePopup","nameCard","setNameCard","linkCardImage","setLinkCardImage","Login","handleLogin","password","data","setData","handleChange","noValidate","Register","handleRegister","ProtectedRoute","Component","component","props","InfoTooltip","image","text","api","address","token","this","_address","_token","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_checkResponse","method","body","JSON","stringify","cardId","elem","isLiked","BASE_URL","checkResponse","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","setLoggedIn","setUserData","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isInfoTooltipPopupData","setIsInfoTooltipPopupData","history","useHistory","closeAllPopups","auth","localStorage","setItem","push","catch","err","console","log","removeItem","getItem","handleCheckToken","all","getInitialCards","getUserInfo","cardsData","error","Provider","changeLikeCardStatus","newCard","state","c","removeCard","filter","imgSuccessSign","imgUnSuccessSign","finally","setUserInfo","addCard","editAvatarPhoto","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7555e3bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport logo from '../images/header__logo.svg';\r\n\r\nfunction Header({ userData, handleLogOut, loggedIn }) {\r\n  const [hamburgerOpened, setHamburgerOpened] = React.useState(false);\r\n  function handleHambergerMenu() {\r\n\r\n    setHamburgerOpened(!hamburgerOpened);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {hamburgerOpened && loggedIn &&\r\n        (<div className='header__container header__container_hamburger'>\r\n          <p className='header__email'>{userData.email}</p>\r\n          <Link className='header__auth-link header__auth-link_type_gray' to='/signin' onClick={handleLogOut} >Выйти</Link>\r\n        </div>)\r\n      }\r\n\r\n      <header className=\"header\">\r\n        <a className=\"header__logo\" href=\"https://learn.javascript.ru/\" target=\"_self\">\r\n          <img className=\"header__img\" src={logo} alt=\"Логотип. Место.\" />\r\n        </a>\r\n        <Route path='/signup'>\r\n          <p className='header__email'>{userData.email}</p>\r\n          <Link className='header__auth-link' to='/signin'>Войти</Link>\r\n        </Route>\r\n        <Route path='/signin'>\r\n          <p className='header__email'>{userData.email}</p>\r\n          <Link className='header__auth-link' to='/signup'>Регистрация</Link>\r\n        </Route>\r\n        <Route exact path='/'>\r\n          <input id=\"header__hamburger-menu\" className=\"header__hamburger-menu\" type=\"checkBox\" />\r\n          <label htmlFor='header__hamburger-menu' className=\"header__hamburger-icon\" onClick={handleHambergerMenu} />\r\n\r\n          <div className='header__container'>\r\n            <p className='header__email'>{userData.email}</p>\r\n            <Link className='header__auth-link header__auth-link_type_gray' to='/signin' onClick={handleLogOut} >Выйти</Link>\r\n          </div>\r\n        </Route>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n  const cardDeleteButtonClassName = (\r\n    `card__trash ${isOwn ? '' : 'card__trash_hidden'}`\r\n  );\r\n\r\n  // Like\r\n  const isLike = card.likes.some(item => item._id === currentUser._id);\r\n  const cardLikeButtonClassName = (\r\n    `card__like ${isLike && 'card__like_choosed'}`\r\n  )\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  }\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card);\r\n  }\r\n\r\n  return (\r\n    <li className=\"card\">\r\n      <img className=\"card__image\" src={card.link} alt={card.name} onClick={handleClick} />\r\n      <div className=\"card__contain\">\r\n        <h3 className=\"card__caption\">{card.name}</h3>\r\n        <div className=\"card__like-contain\">\r\n          <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Лайкнуть\" onClick={handleLikeClick} ></button>\r\n          <p className=\"card__like-count\">{card.likes.length}</p>\r\n        </div>\r\n        <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить\" onClick={handleDeleteClick} ></button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"content\">\r\n\r\n        <section className=\"profile\">\r\n          <div className=\"profile__avatar-container\" onClick={onEditAvatar}>\r\n            <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"Аватар пользователя\" />\r\n            <div className=\"profile__aratar-pointer\"></div>\r\n          </div>\r\n          <div className=\"profile__container\">\r\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n            <button className=\"profile__edit-button\" type=\"button\" aria-label=\"Закрыть\" onClick={onEditProfile}></button>\r\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n          </div>\r\n\r\n          <button className=\"profile__add-button\" type=\"button\" aria-label=\"Добавить фото\" onClick={onAddPlace}></button>\r\n        </section>\r\n\r\n        <section className=\"cards\">\r\n          <ul className=\"cards__list\">\r\n            {cards.map((card, i) => {\r\n              return (\r\n                <Card card={card} onCardClick={onCardClick} key={card._id} onCardLike={onCardLike} onCardDelete={onCardDelete} />\r\n              );\r\n            })\r\n            }\r\n          </ul>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n\r\n","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","function ImagePopup({ card, onClose }) {\r\n  return (\r\n    <div className={`popup popup_type_image ${card.link ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__img-container\">\r\n        <img className=\"popup__img\" alt={card.name} src={card.link} />\r\n        <p className=\"popup__img-caption\">{card.name}</p>\r\n        <button className=\"popup__close\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ImagePopup;","function PopupWithForm({ title, name, isOpen, onClose, buttonText, children, onSubmit }) {\r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}>\r\n      <form className=\"popup__container\" name={name} onSubmit={onSubmit}>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n\r\n        {children}\r\n\r\n        <button className=\"popup__save\" type=\"submit\">{buttonText}</button>\r\n        <button className=\"popup__close\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('Жак-Ив Кусто');\r\n  const [description, setDescripton] = React.useState('Исследователь');\r\n\r\n  // Обработчики изменения инпута обновляет стейт\r\n  function handleChangeName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleChangeDescription(e) {\r\n    setDescripton(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  React.useEffect(_ => {\r\n    setName(currentUser.name);\r\n    setDescripton(currentUser.about);\r\n  }, [currentUser, isOpen]);\r\n\r\n  return (\r\n    // <!-- Попап - редактировать профиль -->\r\n    <PopupWithForm title=\"Редактировать&nbsp;профиль\" buttonText='Сохранить' name='edit-profile' isOpen={isOpen}\r\n      onClose={onClose} onSubmit={handleSubmit}>\r\n      <label className=\"popup__field\">\r\n        <input className=\"popup__input\" type=\"text\" placeholder=\"Имя\" name=\"name\" minLength=\"2\" maxLength=\"40\"\r\n          onChange={handleChangeName} value={name} />\r\n        <span className=\"popup__input-error\"></span>\r\n      </label>\r\n      <label className=\"popup__field\">\r\n        <input className=\"popup__input\" type=\"text\" placeholder=\"Работа\" name=\"about\" minLength=\"2\" maxLength=\"200\"\r\n          onChange={handleChangeDescription} value={description} />\r\n        <span className=\"popup__input-error\"></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n  const linkAvatar = React.useRef('');\r\n\r\n  function hundleSubmit(e) {\r\n    e.preventDefault();\r\n    /* Значение инпута, полученное с помощью рефа */\r\n    onUpdateAvatar({\r\n      avatar: linkAvatar.current.value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Обновить аватар\" buttonText='Сохранить' name='edit-avatar' isOpen={isOpen}\r\n      onClose={onClose} onSubmit={hundleSubmit} >\r\n      <label className=\"popup__field\">\r\n        <input className=\"popup__input\" type=\"url\" placeholder=\"Ссылка на картинку\" name=\"link\" ref={linkAvatar} />\r\n        <span className=\"popup__input-error\"></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n  const [nameCard, setNameCard] = React.useState('');\r\n  const [linkCardImage, setLinkCardImage] = React.useState('');\r\n\r\n  React.useEffect(_ => {\r\n    setNameCard('');\r\n    setLinkCardImage('');\r\n  }, [isOpen]);\r\n\r\n  function handleChangeNameCard(e) {\r\n    setNameCard(e.target.value);\r\n  }\r\n\r\n  function handleChangeLinkCardImage(e) {\r\n    setLinkCardImage(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({\r\n      name: nameCard,\r\n      link: linkCardImage\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Новое место\" buttonText='Создать' name='add-card'\r\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} >\r\n      <label className=\"popup__field\">\r\n        <input className=\"popup__input\" type=\"text\" placeholder=\"Название\" name=\"name\" minLength=\"2\" maxLength=\"30\"\r\n          onChange={handleChangeNameCard} value={nameCard} />\r\n        <span className=\"popup__input-error\"></span>\r\n      </label>\r\n      <label className=\"popup__field\">\r\n        <input className=\"popup__input\" type=\"url\" placeholder=\"Ссылка на картинку\" name=\"link\"\r\n          onChange={handleChangeLinkCardImage} value={linkCardImage} />\r\n        <span className=\"popup__input-error\"></span>\r\n      </label>\r\n    </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nfunction Login({ handleLogin }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { password, email } = data;\r\n    handleLogin({ password, email });\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" name='login' noValidate onSubmit={handleSubmit}>\r\n      <h2 className=\"form__title\">Вход</h2>\r\n      <label className=\"form__field\">\r\n        <input className=\"form__input\" type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleChange}\r\n          value={data.email} />\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input className=\"form__input\" type=\"password\" placeholder=\"Пароль\" name=\"password\" onChange={handleChange}\r\n          value={data.password} />\r\n      </label>\r\n      <button className=\"form__button\" type=\"submit\">Войти</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nfunction Register({ handleRegister }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value })\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const { password, email } = data;\r\n    handleRegister({ password, email });\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" name='register' noValidate onSubmit={handleSubmit}>\r\n      <h2 className=\"form__title\">Регистрация</h2>\r\n      <label className=\"form__field\">\r\n        <input className=\"form__input\" type=\"email\" placeholder=\"Email\" name=\"email\" onChange={handleChange}\r\n          value={data.email} />\r\n      </label>\r\n      <label className=\"form__field\">\r\n        <input className=\"form__input\" type=\"password\" placeholder=\"Пароль\" name=\"password\" onChange={handleChange}\r\n          value={data.password} />\r\n      </label>\r\n      <button className=\"form__button\" type=\"submit\">Зарегистрироваться</button>\r\n      <Link className='form__link' to='/signin' >Уже зарегистрированы? Войти</Link>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;  ","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"./signup\" />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;","function InfoTooltip({ image, text, isOpen, onClose }) {\r\n  return (\r\n    <div className={`popup ${isOpen ? 'popup_opened' : ''}`}>\r\n      <div className='popup__container popup__container_place_info-tool'>\r\n        <img className='info-tool__img' alt={text} src={image} />\r\n        <h2 className=\" popup__title popup__title_type_center\">{text}</h2>\r\n        <button className=\"popup__close popup__close_type_center\" type=\"button\" aria-label=\"Закрыть\" onClick={onClose}></button>\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default InfoTooltip;","class Api {\r\n  constructor({ address, token }) {\r\n    this._address = address;\r\n    this._token = token;\r\n  }\r\n\r\n  //  проверка ответа\r\n  _checkResponse(res) {\r\n    return res.ok\r\n      ? res.json()\r\n      : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n\r\n  getUserInfo() { //1. Загрузка информации о пользователе с сервера\r\n    return fetch(`${this._address}/users/me`,\r\n      {\r\n        headers: {\r\n          authorization: this._token\r\n        }\r\n      }).then(this._checkResponse);\r\n  }\r\n\r\n  setUserInfo({ name, about }) { //3. Редактирование профиля\r\n    return fetch(`${this._address}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          about: about\r\n        })\r\n      }\r\n    ).then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() { //2. Загрузка карточек с сервера\r\n    return fetch(`${this._address}/cards`,\r\n      {\r\n        headers: {\r\n          authorization: this._token\r\n        }\r\n      }).then(this._checkResponse);\r\n  }\r\n\r\n  addCard({ name, link }) {  //4. Добавление новой карточки\r\n    return fetch(`${this._address}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          link: link\r\n        })\r\n      }).then(this._checkResponse);\r\n  }\r\n\r\n  removeCard(cardId) {  // 7. Удаление карточки\r\n    return fetch(`${this._address}/cards/${cardId}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._token,\r\n        },\r\n      }).then(this._checkResponse);\r\n  }\r\n\r\n  // Получение ссылки текущей(выбраной) карточки\r\n  setCurrentElement(elem) {\r\n    this.elem = elem;\r\n  }\r\n\r\n  // 8. Постановка и снятие лайка\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._address}/cards/likes/${cardId}`,\r\n        {\r\n          method: 'Delete',\r\n          headers: {\r\n            authorization: this._token\r\n          }\r\n        }).then(this._checkResponse);\r\n    } else {\r\n      return fetch(`${this._address}/cards/likes/${cardId}`,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            authorization: this._token\r\n          }\r\n        }).then(this._checkResponse);\r\n    }\r\n  }\r\n\r\n  // 9. Обновление аватара пользователя\r\n  editAvatarPhoto({ avatar }) {\r\n    return fetch(`${this._address}/users/me/avatar`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          avatar: avatar\r\n        })\r\n      }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  address: 'https://mesto.nomoreparties.co/v1/cohort-22',\r\n  token: '1ffa7dc3-7c04-464d-a554-c3e498742c2a'\r\n});\r\n\r\nexport default api;","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\n//  проверка ответа\r\nconst checkResponse = (res) => {\r\n  return res.ok\r\n    ? res.json()\r\n    : Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  }).then(checkResponse);\r\n}\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ password, email })\r\n  }).then(checkResponse);\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  }).then(checkResponse);\r\n}","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/unsuccess.df8eddf6.svg\";","import React from 'react';\r\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport InfoTooltip from './InfoTooltip';\r\n\r\nimport api from '../utils/api';\r\n\r\nimport * as auth from '../utils/auth';\r\n\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n// изображения для попапа статуса регистрации/авторизации\r\nimport imgSuccessSign from '../images/success.svg';\r\nimport imgUnSuccessSign from '../images/unsuccess.svg';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({ link: '', name: '' });\r\n  const [currentUser, setCurrentUser] = React.useState({ name: 'Жак-Ив Кусто', about: 'Исследователь' });\r\n  const [cards, setCards] = React.useState([]);\r\n  // Начальное состояние  loggedIn = null - для блокировки начального появления окна регистрации\r\n  const [loggedIn, setLoggedIn] = React.useState(null);\r\n  const [userData, setUserData] = React.useState({ _id: '', email: '' });\r\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\r\n  const [isInfoTooltipPopupData, setIsInfoTooltipPopupData] = React.useState({ image: '', text: '' });\r\n  const history = useHistory();\r\n\r\n  // Загрузка сохраненных данных о пользователе + карточках с сервера\r\n  React.useEffect(() => {\r\n    handleCheckToken();\r\n    Promise.all([api.getInitialCards(), api.getUserInfo()])\r\n      .then(([cardsData, userData]) => {\r\n        setCards(cardsData);\r\n        setCurrentUser(userData);\r\n      }).catch(err => console.error(err));\r\n  }, []);\r\n\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n      .then(newCard => {\r\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\r\n      })\r\n      .catch(err => console.error(err));\r\n  }\r\n  // функции карточек\r\n  function handleCardDelete(card) {\r\n    api.removeCard(card._id)\r\n      .then(_ => {\r\n        setCards(state => {\r\n          return state.filter(c => c._id !== card._id);\r\n        })\r\n      }).catch(err => console.error(err));\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function handleAddPlaceSubmit(name, link) {\r\n    api.addCard(name, link)\r\n      .then(card => {\r\n        closeAllPopups();\r\n        setCards([card, ...cards]);\r\n      }).catch(err => console.error(err));\r\n  }\r\n\r\n  // функции аватара\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleUpdateUser(name, about) {\r\n    api.setUserInfo(name, about)\r\n      .then(userData => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      }).catch(err => console.error(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    api.editAvatarPhoto(avatar)\r\n      .then(userData => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      }).catch(err => console.error(err));\r\n  }\r\n  //  закрыть попапы\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard({ image: '', text: '' });\r\n    setIsInfoTooltipPopupOpen(false);\r\n  }\r\n  // Авторизация\r\n  function handleRegister({ password, email }) {\r\n    auth.register(password, email)\r\n      .then(res => {\r\n        const { email } = res.data;\r\n        setUserData({ ...userData, email });\r\n        setIsInfoTooltipPopupData({ image: imgSuccessSign, text: 'Вы успешно зарегистрировались!' });\r\n        handleLogin({ password, email });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsInfoTooltipPopupData({ image: imgUnSuccessSign, text: 'Что-то пошло не так! Попробуйте ещё раз.' })\r\n      })\r\n      .finally(_ => {\r\n        setIsInfoTooltipPopupOpen(true);\r\n      });\r\n  }\r\n\r\n  function handleLogin({ password, email }) {\r\n    auth.authorize(password, email)\r\n      .then(res => {\r\n        const { token } = res;\r\n        localStorage.setItem('token', token);\r\n        setLoggedIn(true);\r\n        history.push('/');\r\n        setUserData({ ...userData, email });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  function handleCheckToken() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      auth.checkToken(token)\r\n        .then(res => {\r\n          const { _id, email } = res.data;\r\n          setUserData({ _id, email });\r\n          setLoggedIn(true);\r\n          history.push('/');\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  function handleLogOut() {\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('token');\r\n    history.push('/signin');\r\n    setUserData({ _id: '', email: '' });\r\n  }\r\n  // если токен есть - при загрузке блокируется кратковременное появление окна регистрации\r\n  if (loggedIn === null) {\r\n    return (\r\n      <Header userData={userData} handleLogOut={handleLogOut} />\r\n    )\r\n  }\r\n\r\n  // // -----------------------------------------------------------------------------------------------------------------------------\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <div className=\"container\">\r\n          <Header\r\n            userData={userData}\r\n            handleLogOut={handleLogOut}\r\n            loggedIn={loggedIn} />\r\n\r\n          <Switch>\r\n            <ProtectedRoute exact path='/'\r\n              loggedIn={loggedIn}\r\n              component={Main}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n            />\r\n\r\n            <Route path='/signin'>\r\n              <Login handleLogin={handleLogin} />\r\n            </Route>\r\n            <Route path='/signup'>\r\n              <Register handleRegister={handleRegister} />\r\n            </Route>\r\n            <Route>\r\n              {loggedIn ? (\r\n                <Redirect to=\"/\" />\r\n              ) : (\r\n                <Redirect to=\"/signup\" />\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n\r\n          <Footer />\r\n\r\n          {/* Попап - редактировать профиль */}\r\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n\r\n          {/* <!-- Попап - Добавление картчки --> */}\r\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n\r\n          {/* <!-- Попап - изменить аватар --> */}\r\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n\r\n          {/* <!-- Попап - Показать картинку --> */}\r\n          <ImagePopup onClose={closeAllPopups} card={selectedCard} />\r\n\r\n          {/* Попап модального окна,который информирует пользователя об успешной */}\r\n          <InfoTooltip isOpen={isInfoTooltipPopupOpen} onClose={closeAllPopups}\r\n            image={isInfoTooltipPopupData.image} text={isInfoTooltipPopupData.text} />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render((\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>),\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}